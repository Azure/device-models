name: validate_models

on:
  pull_request:
    branches: [main]
    paths:
      - '**/*'
jobs:
  validate-dtdl-models:
    runs-on: ubuntu-latest
    steps:
      - name: Install Microsoft.IoT.ModelsRepository.CommandLine (dmr-client) from NuGet
        run: |
          dotnet tool install -g Microsoft.IoT.ModelsRepository.CommandLine --version 1.0.0-beta.5

      - name: Checkout repository models
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2

      - name: Validate Models
        run: |
          for f in ${{ steps.files.outputs.added_modified }};
          do
              if [[ $f =~ ^dtmi([\/\\]) ]]
              then
                if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
                then
                  dmr-client validate --model-file $f --repo $PWD --strict
                else
                  echo "::error file=$f::Invalid model placement. 
                  Use the dmr-client import command or review the resolution convention spec: 
                  https://github.com/Azure/iot-plugandplay-models-tools/wiki/Resolution-Convention#folder-and-file-structure"
                  exit 1
                fi
              else
                echo "Skipping non-model file: $f"
              fi
          done
        shell: bash
  reject-model-edits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2

      - name: Reject edits to Models
        run: |
          exit_code=0
          for f in ${{ steps.files.outputs.modified }};
          do
            if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
            then
              echo "Edits aren't allowed to existing DTDL files: $f"
              exit_code=1
            fi
          done
          exit $exit_code
        shell: bash
  reject-model-renames:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2

      - name: Reject renames to Models
        run: |
          exit_code=0
          for f in ${{ steps.files.outputs.renamed }};
          do
            if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
            then
              echo "Renames aren't allowed to existing DTDL files: $f"
              exit_code=1
            fi
          done
          exit $exit_code
        shell: bash
  reject-model-deletions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2

      - name: Reject deletions to Models
        run: |
          exit_code=0
          for f in ${{ steps.files.outputs.removed }};
          do
            if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
            then
              echo "Deletions aren't allowed to existing DTDL files: $f"
              exit_code=1
            fi
          done
          exit $exit_code
        shell: bash
  warn-non-model-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2

      - name: Warn on non-model changes
        run: |
          exit_code=0
          for f in  ${{ steps.files.outputs.added_modified }};
          do
            if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
            then
              echo "skipping DTDL file $f"
            else
              echo "::warning file=$f::Please review non-DTDL file changes."
            fi
          done
          exit $exit_code
        shell: bash
