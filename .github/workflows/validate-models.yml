name: validate-models

on:
  pull_request:
    branches: [main]
    paths:
      - '**/*'
jobs:
  validate-models:
    runs-on: ubuntu-latest
    steps:
      - name: Pull DMR tools snapshot
        uses: actions/checkout@v2
        with:
          repository: Azure/iot-plugandplay-models-tools
          ref: 0.2-preview
          path: dmr-tool-cache

      - name: Build and install dmr-client CLI
        run: |
          dotnet pack dmr-tool-cache/resolvers/dotnet
          dotnet tool install -g dmr-client --add-source dmr-tool-cache/resolvers/dotnet/Azure.IoT.DeviceModelsRepository.CLI/bin/Debug
          rm -rf dmr-tool-cache

      - name: Checkout code
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2
      
      - name: Validate Models
        env:
          Logging__LogLevel__Default: None
          
        run: |
          for f in  ${{ steps.files.outputs.added_modified }};
          do
              if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
              then
                  echo "validating $f"
                  dmr-client validate --model-file $f --repo $PWD --strict True
                  if [ $? -eq 0 ]
                  then
                      echo "validation ok: $f"
                  else
                      echo "error validating model: $f"
                      exit $?
                  fi
              else
                echo "skipping $f"
              fi
          done
        shell: bash
  reject-edits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2

      - name: Reject edits to Models
        run: |
          exit_code=0
          for f in  ${{ steps.files.outputs.modified }};
          do
            if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
            then
              echo "edits aren't allowed to existing DTDL files: $f"
              exit_code=1
            fi
          done
          exit $exit_code
        shell: bash
  reject-renames:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2

      - name: Reject renames to Models
        run: |
          exit_code=0
          for f in  ${{ steps.files.outputs.renamed }};
          do
            if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
            then
              echo "renames aren't allowed to existing DTDL files: $f"
              exit_code=1
            fi
          done
          exit $exit_code
        shell: bash
  reject-deletions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2

      - name: Reject deletions to Models
        run: |
          exit_code=0
          for f in  ${{ steps.files.outputs.removed }};
          do
            if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
            then
              echo "deletions aren't allowed to existing DTDL files: $f"
              exit_code=1
            fi
          done
          exit $exit_code
        shell: bash
  reject-non-models:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: files
        uses: digimaun/get-changed-files@v2

      - name: Reject deletions to Models
        run: |
          exit_code=0
          for f in  ${{ steps.files.outputs.added_modified }};
          do
              if [[ $f =~ ^dtmi([\/\\][a-z0-9_]+){2,}-([1-9][0-9]{0,8}).json$ ]]
              then
                  echo "skipping DTDL file $f"
              else
                echo "edits made to non-DTDL files is not allowed: $f"
                exit_code=1
              fi
          done
          exit $exit_code
        shell: bash